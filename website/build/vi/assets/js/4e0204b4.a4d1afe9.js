"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4440],{98803:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=t(85893),r=t(11151);const o={id:"error-implementation",title:"\u0110\xe1nh Gi\xe1 Source Code",sidebar_label:"\u0110\xe1nh Gi\xe1 Source Code"},a=void 0,c={id:"integrations/errors/error-implementation",title:"\u0110\xe1nh Gi\xe1 Source Code",description:'B\xe0i vi\u1ebft n\xe0y cung c\u1ea5p m\u1ed9t c\xe1i nh\xecn r\u1ea5t t\u1ed5ng qu\xe1t v\u1ec1 c\xe1c lo\u1ea1i l\u1ed7i v\xe0 th\xf4ng \u0111i\u1ec7p t\u01b0\u01a1ng \u1ee9ng \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1edfi n\u1ec1n t\u1ea3ng NEAR, \u0111\xf4i khi l\xe0 "pseudocode".',source:"@site/i18n/vi/docusaurus-plugin-content-docs/current/6.integrations/errors/error-implementation.md",sourceDirName:"6.integrations/errors",slug:"/integrations/errors/error-implementation",permalink:"/vi/integrations/errors/error-implementation",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/6.integrations/errors/error-implementation.md",tags:[],version:"current",lastUpdatedBy:"Github Actions",lastUpdatedAt:1720430471e3,frontMatter:{id:"error-implementation",title:"\u0110\xe1nh Gi\xe1 Source Code",sidebar_label:"\u0110\xe1nh Gi\xe1 Source Code"},sidebar:"exchanges",previous:{title:"Gi\u1edbi thi\u1ec7u",permalink:"/vi/integrations/errors/introduction"},next:{title:"Token Loss",permalink:"/vi/integrations/errors/token-loss"}},s={},d=[{value:"RuntimeError v\xe0 c\xe1c subtype",id:"runtimeerror-and-subtypes",level:2},{value:"RuntimeError",id:"runtimeerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages",level:4},{value:"InvalidTxError",id:"invalidtxerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-1",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages-1",level:4},{value:"StorageError",id:"storageerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-2",level:4},{value:"BalanceMismatchError",id:"balancemismatcherror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-3",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages-2",level:4},{value:"InvalidAccessKeyError",id:"invalidaccesskeyerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-4",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages-3",level:4},{value:"ActionsValidationError",id:"actionsvalidationerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-5",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages-4",level:4},{value:"TxExecutionError v\xe0 c\xe1c subtype",id:"txexecutionerror-and-subtypes",level:2},{value:"TxExecutionError",id:"txexecutionerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-6",level:4},{value:"ActionError",id:"actionerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-7",level:4},{value:"ActionErrorKind",id:"actionerrorkind",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-8",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages-5",level:4},{value:"ReceiptValidationError",id:"receiptvalidationerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-9",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages-6",level:4},{value:"VMError v\xe0 c\xe1c subtype",id:"vmerror-and-subtypes",level:2},{value:"VMError",id:"vmerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-10",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages-7",level:4},{value:"FunctionCallError",id:"functioncallerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-11",level:4},{value:"Error Messages",id:"error-messages-8",level:4},{value:"MethodResolveError",id:"methodresolveerror",level:3},{value:"Definition",id:"definition-12",level:4},{value:"CompilationError",id:"compilationerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-13",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages-9",level:4},{value:"PrepareError",id:"prepareerror",level:3},{value:"Definition",id:"definition-14",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages-10",level:4},{value:"HostError",id:"hosterror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-15",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages-11",level:4},{value:"VMLogicError",id:"vmlogicerror",level:3},{value:"\u0110\u1ecbnh ngh\u0129a",id:"definition-16",level:4},{value:"InconsistentStateError",id:"inconsistentstateerror",level:3},{value:"Definition",id:"definition-17",level:4},{value:"Th\xf4ng B\xe1o L\u1ed7i",id:"error-messages-12",level:4},{value:"RPC interface",id:"rpc-interface",level:2},{value:"Schema c\u1ee7a l\u1ed7i",id:"error-schema",level:3}];function l(n){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:'B\xe0i vi\u1ebft n\xe0y cung c\u1ea5p m\u1ed9t c\xe1i nh\xecn r\u1ea5t t\u1ed5ng qu\xe1t v\u1ec1 c\xe1c lo\u1ea1i l\u1ed7i v\xe0 th\xf4ng \u0111i\u1ec7p t\u01b0\u01a1ng \u1ee9ng \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1edfi n\u1ec1n t\u1ea3ng NEAR, \u0111\xf4i khi l\xe0 "pseudocode".'}),"\n",(0,i.jsxs)(e.p,{children:["C\xe1c l\u1ed7i do NEAR platform \u0111\u01b0a ra \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n \u1edf c\xe1c file sau trong ",(0,i.jsx)(e.code,{children:"nearcore"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/near/nearcore/blob/master/core/primitives/src/errors.rs",children:"nearcore/core/primitives/src/errors.rs"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/near/nearcore/blob/master/runtime/near-vm-errors/src/lib.rs",children:"nearcore/runtime/near-vm-errors/src/lib.rs"})}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"runtimeerror-and-subtypes",children:"RuntimeError v\xe0 c\xe1c subtype"}),"\n",(0,i.jsx)(e.h3,{id:"runtimeerror",children:"RuntimeError"}),"\n",(0,i.jsx)(e.h4,{id:"definition",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"/// L\u1ed7i \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 t\u1eeb `Runtime::apply`\npub enum RuntimeError {\n    ///  \u0110\xe3 x\u1ea3y ra l\u1ed7i tr\xe0n s\u1ed1 integer kh\xf4ng mong mu\u1ed1n. V\u1ea5n \u0111\u1ec1 c\xf3 th\u1ec3 l\xe0 m\u1ed9t state ho\u1eb7c m\u1ed9t qu\xe1 tr\xecnh chuy\u1ec3n \u0111\u1ed5i kh\xf4ng h\u1ee3p l\u1ec7.\n    UnexpectedIntegerOverflow,\n    /// L\u1ed7i \u0111\xe3 x\u1ea3y ra trong qu\xe1 tr\xecnh x\xe1c th\u1ef1c TX v\xe0 t\xednh ph\xed account. C\xf3 th\u1ec3 l\xe0 chunk kh\xf4ng h\u1ee3p l\u1ec7.\n    /// v\xe0 c\u1ea7n \u0111\u01b0\u1ee3c challenge.\n    InvalidTxError(InvalidTxError),\n    /// L\u1ed7i kh\xf4ng mong mu\u1ed1n th\u01b0\u1eddng li\xean quan \u0111\u1ebfn l\u1ed7i storage c\u1ee7a node.\n    /// \u0110\xf3 c\xf3 th\u1ec3 l\xe0 input state kh\xf4ng h\u1ee3p l\u1ec7 ho\u1eb7c \u0111\u1ed9c h\u1ea1i.\n    StorageError(StorageError),\n    /// L\u1ed7i x\u1ea3y ra n\u1ebfu `check_balance` th\u1ea5t b\u1ea1i, n\xf3 c\xf3 th\u1ec3 l\xe0 d\u1ea5u hi\u1ec7u c\u1ee7a m\u1ed9t state kh\xf4ng h\u1ee3p l\u1ec7.\n    BalanceMismatchError(BalanceMismatchError),\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["xem d\u01b0\u1edbi \u0111\xe2y: ",(0,i.jsx)(e.code,{children:"InvalidTxError"}),", ",(0,i.jsx)(e.code,{children:"StorageError"})," v\xe0 ",(0,i.jsx)(e.code,{children:"BalanceMismatchError"})]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"invalidtxerror",children:"InvalidTxError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-1",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"/// L\u1ed7i \u0111\xe3 x\u1ea3y ra trong qu\xe1 tr\xecnh th\u1ef1c thi TX\npub enum InvalidTxError {\n    /// X\u1ea3y ra n\u1ebfu s\u1eed d\u1ee5ng sai AccessKey ho\u1eb7c AccessKey kh\xf4ng c\xf3 \u0111\u1ee7 permission.\n    InvalidAccessKeyError(InvalidAccessKeyError),\n    /// TX signer_id kh\xf4ng c\xf3 format h\u1ee3p l\u1ec7 ho\u1eb7c kh\xf4ng th\u1ecfa m\xe3n c\xe1c y\xeau c\u1ea7u, xem th\xeam `near_core::primitives::utils::is_valid_account_id`\n    InvalidSignerId { signer_id: AccountId },\n    /// TX signer_id kh\xf4ng \u0111\u01b0\u1ee3c t\xecm th\u1ea5y trong storage\n    SignerDoesNotExist { signer_id: AccountId },\n    /// Transaction nonce ph\u1ea3i l\xe0 account[access_key].nonce + 1\n    InvalidNonce { tx_nonce: Nonce, ak_nonce: Nonce },\n    /// TX receiver_id kh\xf4ng c\xf3 format h\u1ee3p l\u1ec7 ho\u1eb7c kh\xf4ng th\u1ecfa m\xe3n c\xe1c y\xeau c\u1ea7u, xem th\xeam `near_core::primitives::utils::is_valid_account_id`\n    InvalidReceiverId { receiver_id: AccountId },\n    /// TX signature kh\xf4ng h\u1ee3p l\u1ec7\n    InvalidSignature,\n    /// Account kh\xf4ng \u0111\u1ee7 s\u1ed1 d\u01b0 \u0111\u1ec3 trang tr\u1ea3i chi ph\xed TX\n    NotEnoughBalance {\n        signer_id: AccountId,\n        balance: Balance,\n        cost: Balance,\n    },\n    /// Signer account ch\u01b0a tr\u1ea3 ti\u1ec1n thu\xea\n    RentUnpaid {\n        /// Account \u0111\u01b0\u1ee3c y\xeau c\u1ea7u tr\u1ea3 ti\u1ec1n thu\xea\n        signer_id: AccountId,\n        /// S\u1ed1 d\u01b0 y\xeau c\u1ea7u \u0111\u1ec3 trang tr\u1ea3i cho ti\u1ec1n thu\xea c\u1ee7a state\n        amount: Balance,\n    },\n    /// L\u1ed7i tr\xe0n s\u1ed1 integer \u0111\xe3 x\u1ea3y ra trong qu\xe1 tr\xecnh \u01b0\u1edbc t\xednh chi ph\xed c\u1ee7a transaction.\n    CostOverflow,\n    /// Parent block hash c\u1ee7a transaction kh\xf4ng thu\u1ed9c v\u1ec1 chain hi\u1ec7n t\u1ea1i\n    InvalidChain,\n    /// Transaction \u0111\xe3 h\u1ebft h\u1ea1n\n    Expired,\n    /// L\u1ed7i \u0111\xe3 x\u1ea3y ra trong qu\xe1 tr\xecnh x\xe1c nh\u1eadn c\xe1c action c\u1ee7a m\u1ed9t Transaction.\n    ActionsValidation(ActionsValidationError),\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-1",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'InvalidTxError::InvalidSignerId { signer_id }\n    "Invalid signer account ID {:?} according to requirements"\n\nInvalidTxError::SignerDoesNotExist { signer_id }\n    "Signer {:?} does not exist"\n\nInvalidTxError::InvalidAccessKeyError(access_key_error)\n\nInvalidTxError::InvalidNonce { tx_nonce, ak_nonce }\n    "Transaction nonce {} must be larger than nonce of the used access key {}"\n\nInvalidTxError::InvalidReceiverId { receiver_id }\n    "Invalid receiver account ID {:?} according to requirements"\n\nInvalidTxError::InvalidSignature\n    "Transaction is not signed with the given public key"\n\nInvalidTxError::NotEnoughBalance { signer_id, balance, cost }\n    "Sender {:?} does not have enough balance {} for operation costing {}"\n\nInvalidTxError::RentUnpaid { signer_id, amount }\n    "Failed to execute, because the account {:?} wouldn\'t have enough to pay required rent {}" \n\nInvalidTxError::CostOverflow\n    "Transaction gas or balance cost is too high"\n\nInvalidTxError::InvalidChain\n    "Transaction parent block hash doesn\'t belong to the current chain"\n\nInvalidTxError::Expired\n    "Transaction has expired"\n\nInvalidTxError::ActionsValidation(error)\n    "Transaction actions validation error: {}"\n'})}),"\n",(0,i.jsx)(e.h3,{id:"storageerror",children:"StorageError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-2",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"pub enum StorageError {\n    /// L\u1ed7i x\u1ea3y ra b\xean trong c\u1ee7a key-value db\n    StorageInternalError,\n    /// Storage l\xe0 PartialStorage v\xe0 y\xeau c\u1ea7u m\u1ed9t trie node b\u1ecb thi\u1ebfu\n    TrieNodeMissing,\n    /// State kh\xf4ng h\u1ee3p l\u1ec7 ho\u1eb7c key-value db b\u1ecb l\u1ed7i.\n    /// \u0110\u1ed1i v\u1edbi PartialStorage n\xf3 kh\xf4ng th\u1ec3 b\u1ecb l\u1ed7i.\n    /// Th\xf4ng b\xe1o l\u1ed7i kh\xf4ng \u0111\xe1ng tin c\u1eady v\xe0 ch\u1ec9 d\xe0nh cho m\u1ee5c \u0111\xedch debug. N\xf3 c\u0169ng c\xf3 th\u1ec3 \u1ed5n khi\n    /// panic t\u1ea1i b\u1ea5t c\u1ee9 n\u01a1i n\xe0o t\u1ea1o ra l\u1ed7i n\xe0y.\n    /// Ch\xfang ta c\xf3 th\u1ec3 ki\u1ec3m tra n\u1ebfu db b\u1ecb l\u1ed7i hay kh\xf4ng b\u1eb1ng c\xe1ch x\xe1c minh m\u1ecdi th\u1ee9 trong state trie.\n    StorageInconsistentState(String),\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"balancemismatcherror",children:"BalanceMismatchError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-3",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"/// X\u1ea3y ra khi s\u1ed1 d\u01b0 \u0111\u1ea7u v\xe0o kh\xf4ng kh\u1edbp v\u1edbi s\u1ed1 d\u01b0 \u0111\u1ea7u ra khi \xe1p d\u1ee5ng Runtime.\npub struct BalanceMismatchError {\n    // C\xe1c s\u1ed1 d\u01b0 \u0111\u1ea7u v\xe0o\n    pub incoming_validator_rewards: Balance,\n    pub initial_accounts_balance: Balance,\n    pub incoming_receipts_balance: Balance,\n    pub processed_delayed_receipts_balance: Balance,\n    pub initial_postponed_receipts_balance: Balance,\n    // C\xe1c s\u1ed1 d\u01b0 \u0111\u1ea7u ra\n    pub final_accounts_balance: Balance,\n    pub outgoing_receipts_balance: Balance,\n    pub new_delayed_receipts_balance: Balance,\n    pub final_postponed_receipts_balance: Balance,\n    pub total_rent_paid: Balance,\n    pub total_validator_reward: Balance,\n    pub total_balance_burnt: Balance,\n    pub total_balance_slashed: Balance,\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-2",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'"Balance Mismatch Error. The input balance {} doesn\'t match output balance {}\\n\\\nInputs:\\n\\\n    \\tIncoming validator rewards sum: {}\\n\\\n    \\tInitial accounts balance sum: {}\\n\\\n    \\tIncoming receipts balance sum: {}\\n\\\n    \\tProcessed delayed receipts balance sum: {}\\n\\\n    \\tInitial postponed receipts balance sum: {}\\n\\\nOutputs:\\n\\\n    \\tFinal accounts balance sum: {}\\n\\\n    \\tOutgoing receipts balance sum: {}\\n\\\n    \\tNew delayed receipts balance sum: {}\\n\\\n    \\tFinal postponed receipts balance sum: {}\\n\\\n    \\tTotal rent paid: {}\\n\\\n    \\tTotal validators reward: {}\\n\\\n    \\tTotal balance burnt: {}\\n\\\n    \\tTotal balance slashed: {}",\n'})}),"\n",(0,i.jsx)(e.h3,{id:"invalidaccesskeyerror",children:"InvalidAccessKeyError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-4",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"pub enum InvalidAccessKeyError {\n    /// Access key x\xe1c \u0111\u1ecbnh b\u1edfi `public_key` kh\xf4ng t\u1ed3n t\u1ea1i v\u1edbi account\n    AccessKeyNotFound { account_id: AccountId, public_key: PublicKey },\n    /// `receiver_id` c\u1ee7a transaction kh\xf4ng kh\u1edbp v\u1edbi receiver_id c\u1ee7a access key\n    ReceiverMismatch { tx_receiver: AccountId, ak_receiver: AccountId },\n    /// T\xean method c\u1ee7a transaction kh\xf4ng \u0111\u01b0\u1ee3c cho ph\xe9p b\u1edfi access key\n    MethodNameMismatch { method_name: String },\n    /// Transaction y\xeau c\u1ea7u m\u1ed9t full permission access key.\n    RequiresFullAccess,\n    /// Access Key kh\xf4ng \u0111\u1ee7 kho\u1ea3n ti\u1ec1n cho ph\xe9p \u0111\u1ec3 chi tr\u1ea3 cho chi ph\xed c\u1ee7a transaction\n    NotEnoughAllowance {\n        account_id: AccountId,\n        public_key: PublicKey,\n        allowance: Balance,\n        cost: Balance,\n    },\n    /// C\xf3 kho\u1ea3n ti\u1ec1n g\u1eedi trong m\u1ed9t function call action kh\xf4ng \u0111\u01b0\u1ee3c cho ph\xe9p v\u1edbi m\u1ed9t function call access key.\n    DepositWithFunctionCall,\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-3",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'InvalidAccessKeyError::AccessKeyNotFound { account_id, public_key }\n    "Signer {:?} doesn\'t have access key with the given public_key {}"\n\nInvalidAccessKeyError::ReceiverMismatch { tx_receiver, ak_receiver }\n    "Transaction receiver_id {:?} doesn\'t match the access key receiver_id {:?}"\n\nInvalidAccessKeyError::MethodNameMismatch { method_name }\n    "Transaction method name {:?} isn\'t allowed by the access key"\n\nInvalidAccessKeyError::RequiresFullAccess\n    "The transaction contains more then one action, but it was signed \\\n     with an access key which allows transaction to apply only one specific action. \\\n     To apply more then one actions TX must be signed with a full access key"\n\nInvalidAccessKeyError::NotEnoughAllowance { account_id, public_key, allowance, cost }\n    "Access Key {:?}:{} does not have enough balance {} for transaction costing {}"\n\nInvalidAccessKeyError::DepositWithFunctionCall\n    "Having a deposit with a function call action is not allowed with a function call access key."\n'})}),"\n",(0,i.jsx)(e.h3,{id:"actionsvalidationerror",children:"ActionsValidationError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-5",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"/// M\xf4 t\u1ea3 l\u1ed7i c\u1ee7a vi\u1ec7c x\xe1c nh\u1eadn m\u1ed9t danh s\xe1ch c\xe1c action.\npub enum ActionsValidationError {\n    /// T\u1ed5ng gas tr\u1ea3 tr\u01b0\u1edbc (c\u1ee7a t\u1ea5t c\u1ea3 c\xe1c action) \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n.\n    TotalPrepaidGasExceeded { total_prepaid_gas: Gas, limit: Gas },\n    /// S\u1ed1 l\u01b0\u1ee3ng c\xe1c action v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n cho tr\u01b0\u1edbc.\n    TotalNumberOfActionsExceeded { total_number_of_actions: u64, limit: u64 },\n    /// T\u1ed5ng s\u1ed1 byte c\u1ee7a c\xe1c t\xean method \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n trong action Add Key.\n    AddKeyMethodNamesNumberOfBytesExceeded { total_number_of_bytes: u64, limit: u64 },\n    /// Chi\u1ec1u d\xe0i c\u1ee7a m\u1ed9t s\u1ed1 t\xean method \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n trong action Add Key.\n    AddKeyMethodNameLengthExceeded { length: u64, limit: u64 },\n    /// L\u1ed7i tr\xe0n s\u1ed1 integer trong qu\xe1 tr\xecnh t\xednh to\xe1n.\n    IntegerOverflow,\n    /// Account ID kh\xf4ng h\u1ee3p l\u1ec7.\n    InvalidAccountId { account_id: AccountId },\n    /// K\xedch th\u01b0\u1edbc code c\u1ee7a contract \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n trong action DeployContract.\n    ContractSizeExceeded { size: u64, limit: u64 },\n    /// Chi\u1ec1u d\xe0i c\u1ee7a m\u1ed9t s\u1ed1 t\xean method \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n trong action Function Call.\n    FunctionCallMethodNameLengthExceeded { length: u64, limit: u64 },\n    /// Chi\u1ec1u d\xe0i c\u1ee7a c\xe1c tham s\u1ed1 \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n trong action Function Call.\n    FunctionCallArgumentsLengthExceeded { length: u64, limit: u64 },\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-4",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'ActionsValidationError::TotalPrepaidGasExceeded     { total_prepaid_gas, limit }\n     "The total prepaid gas {} exceeds the limit {}"\n\nActionsValidationError::TotalNumberOfActionsExceeded {total_number_of_actions, limit }\n     "The total number of actions {} exceeds the limit {}"\n\nActionsValidationError::AddKeyMethodNamesNumberOfBytesExceeded { total_number_of_bytes, limit }\n     "The total number of bytes in allowed method names {} exceeds the maximum allowed number {} in a AddKey action"\n\nActionsValidationError::AddKeyMethodNameLengthExceeded { length, limit }\n     "The length of some method name {} exceeds the maximum allowed length {} in a AddKey action"\n\nActionsValidationError::IntegerOverflow\n     "Integer overflow during a compute"\n\nActionsValidationError::InvalidAccountId { account_id }\n     "Invalid account ID `{}`"\n\nActionsValidationError::ContractSizeExceeded { size, limit }\n     "The length of the contract size {} exceeds the maximum allowed size {} in a DeployContract action"\n\nActionsValidationError::FunctionCallMethodNameLengthExceeded { length, limit }\n     "The length of the method name {} exceeds the maximum allowed length {} in a FunctionCall action"\n\nActionsValidationError::FunctionCallArgumentsLengthExceeded { length, limit }\n     "The length of the arguments {} exceeds the maximum allowed length {} in a FunctionCall action"\n\n'})}),"\n",(0,i.jsx)(e.h2,{id:"txexecutionerror-and-subtypes",children:"TxExecutionError v\xe0 c\xe1c subtype"}),"\n",(0,i.jsx)(e.h3,{id:"txexecutionerror",children:"TxExecutionError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-6",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"/// C\xf3 l\u1ed7i tr\u1ea3 v\u1ec1 c\u1ee7a ExecutionOutcome trong tr\u01b0\u1eddng h\u1ee3p th\u1ea5t b\u1ea1i\npub enum TxExecutionError {\n    /// L\u1ed7i \u0111\xe3 x\u1ea3y ra trong qu\xe1 tr\xecnh th\u1ef1c thi Action\n    ActionError(ActionError),\n    /// L\u1ed7i \u0111\xe3 x\u1ea3y ra trong qu\xe1 tr\xecnh th\u1ef1c thi Transaction\n    InvalidTxError(InvalidTxError),\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"actionerror",children:"ActionError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-7",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"ActionError\npub struct ActionError {\n    /// Index c\u1ee7a action th\u1ea5t b\u1ea1i trong transaction.\n    /// Action index kh\xf4ng \u0111\u01b0\u1ee3c x\xe1c \u0111\u1ecbnh n\u1ebfu ActionError.kind l\xe0 `ActionErrorKind::RentUnpaid`\n    pub index: Option<u64>,\n    /// Lo\u1ea1i ActionError \u0111\xe3 x\u1ea3y ra\n    pub kind: ActionErrorKind,\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"actionerrorkind",children:"ActionErrorKind"}),"\n",(0,i.jsx)(e.h4,{id:"definition-8",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"pub enum ActionErrorKind {\n    /// X\u1ea3y ra khi action CreateAccount c\u1ed1 g\u1eafng t\u1ea1o account v\u1edbi account_id \u0111\xe3 t\u1ed3n t\u1ea1i trong storage\n    AccountAlreadyExists { account_id: AccountId },\n    /// X\u1ea3y ra khi receiver_id c\u1ee7a TX kh\xf4ng t\u1ed3n t\u1ea1i (nh\u01b0ng action kh\xf4ng ph\u1ea3i l\xe0 Action::CreateAccount)\n    AccountDoesNotExist { account_id: AccountId },\n    /// Account m\u1edbi v\u1eeba \u0111\u01b0\u1ee3c t\u1ea1o ph\u1ea3i n\u1eb1m d\u01b0\u1edbi namespace c\u1ee7a account ng\u01b0\u1eddi t\u1ea1o\n    CreateAccountNotAllowed { account_id: AccountId, predecessor_id: AccountId },\n    /// C\xe1c action qu\u1ea3n tr\u1ecb nh\u01b0 `DeployContract`, `Stake`, `AddKey`, `DeleteKey`. ch\u1ec9 c\xf3 th\u1ec3 ti\u1ebfn h\xe0nh n\u1ebfu sender=receiver\n    /// ho\u1eb7c action \u0111\u1ea7u ti\xean c\u1ee7a TX l\xe0 action `CreateAccount`\n    ActorNoPermission { account_id: AccountId, actor_id: AccountId },\n    /// Account c\u1ed1 g\u1eafng x\xf3a m\u1ed9t access key kh\xf4ng t\u1ed3n t\u1ea1i\n    DeleteKeyDoesNotExist { account_id: AccountId, public_key: PublicKey },\n    /// Public key \u0111\u01b0\u1ee3c d\xf9ng cho m\u1ed9t access key \u0111\xe3 t\u1ed3n t\u1ea1i\n    AddKeyAlreadyExists { account_id: AccountId, public_key: PublicKey },\n    /// Account \u0111ang stake v\xe0 kh\xf4ng th\u1ec3 x\xf3a \u0111\u01b0\u1ee3c.\n    DeleteAccountStaking { account_id: AccountId },\n    /// Foreign sender (sender=!receiver) ch\u1ec9 c\xf3 th\u1ec3 x\xf3a m\u1ed9t account n\u1ebfu account \u0111\xf3 kh\xf4ng c\xf3 \u0111\u1ee7 token \u0111\u1ec3 tr\u1ea3 ph\xed thu\xea\n    DeleteAccountHasRent {\n        account_id: AccountId,\n        balance: Balance,\n    },\n    /// ActionReceipt kh\xf4ng th\u1ec3 \u0111\u01b0\u1ee3c ho\xe0n t\u1ea5t, b\u1edfi v\xec s\u1ed1 d\u01b0 c\xf2n l\u1ea1i kh\xf4ng \u0111\u1ee7 \u0111\u1ec3 tr\u1ea3 ph\xed thu\xea.\n    RentUnpaid {\n        /// Account \u0111\u01b0\u1ee3c y\xeau c\u1ea7u \u0111\u1ec3 tr\u1ea3 ph\xed thu\xea\n        account_id: AccountId,\n        /// Ph\xed thu\xea ph\u1ea3i tr\u1ea3.\n        amount: Balance,\n    },\n    /// Account kh\xf4ng stake, nh\u01b0ng c\u1ed1 g\u1eafng unstake\n    TriesToUnstake { account_id: AccountId },\n    /// Account kh\xf4ng \u0111\u1ee7 s\u1ed1 d\u01b0 \u0111\u1ec3 t\u0103ng kho\u1ea3n ti\u1ec1n stake.\n    TriesToStake {\n        account_id: AccountId,\n        stake: Balance,\n        locked: Balance,\n        balance: Balance,\n    },\n    /// L\u1ed7i \u0111\xe3 x\u1ea3y ra trong Action `FunctionCall`.\n    FunctionCallError(FunctionCallError),\n    /// L\u1ed7i x\u1ea3y ra khi `ActionReceipt` m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o b\u1edfi action `FunctionCall` th\u1ea5t b\u1ea1i\n    /// trong qu\xe1 tr\xecnh x\xe1c nh\u1eadn receipt.\n    NewReceiptValidationError(ReceiptValidationError),\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-5",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'ActionErrorKind::AccountAlreadyExists { account_id } \n"Can\'t create a new account {:?}, because it already exists"\n\nActionErrorKind::AccountDoesNotExist { account_id } \n"Can\'t complete the action because account {:?} doesn\'t exist"\n\nActionErrorKind::ActorNoPermission { actor_id, account_id } \n"Actor {:?} doesn\'t have permission to account {:?} to complete the action"\n\nActionErrorKind::RentUnpaid { account_id, amount } \n"The account {} wouldn\'t have enough balance to pay required rent {}"\n\nActionErrorKind::TriesToUnstake { account_id } \n"Account {:?} is not yet staked, but tries to unstake"\n\nActionErrorKind::TriesToStake { account_id, stake, locked, balance } \n"Account {:?} tries to stake {}, but has staked {} and only has {}"\n\nActionErrorKind::CreateAccountNotAllowed { account_id, predecessor_id } \n"The new account_id {:?} can\'t be created by {:?}"\n\nActionErrorKind::DeleteKeyDoesNotExist { account_id, .. } \n"Account {:?} tries to remove an access key that doesn\'t exist"\n\nActionErrorKind::AddKeyAlreadyExists { public_key, .. } \n"The public key {:?} is already used for an existing access key"\n\nActionErrorKind::DeleteAccountStaking { account_id }\n"Account {:?} is staking and can not be deleted"\n\nActionErrorKind::DeleteAccountHasRent { account_id, balance } \n"Account {:?} can\'t be deleted. It has {}, which is enough to cover the rent"\n\nActionErrorKind::FunctionCallError(s) \n\nActionErrorKind::NewReceiptValidationError(e) \n"An new action receipt created during a FunctionCall is not valid: {}"\n'})}),"\n",(0,i.jsx)(e.h3,{id:"receiptvalidationerror",children:"ReceiptValidationError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-9",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"/// M\xf4 t\u1ea3 l\u1ed7i cho qu\xe1 tr\xecnh x\xe1c nh\u1eadn receipt.\npub enum ReceiptValidationError {\n    /// `predecessor_id` c\u1ee7a Receipt kh\xf4ng h\u1ee3p l\u1ec7.\n    InvalidPredecessorId { account_id: AccountId },\n    /// `receiver_id` c\u1ee7a Receipt kh\xf4ng h\u1ee3p l\u1ec7.\n    InvalidReceiverId { account_id: AccountId },\n    /// `signer_id` c\u1ee7a ActionReceipt kh\xf4ng h\u1ee3p l\u1ec7.\n    InvalidSignerId { account_id: AccountId },\n    /// `receiver_id` c\u1ee7a DataReceiver n\u1eb1m trong ActionReceipt kh\xf4ng h\u1ee3p l\u1ec7.\n    InvalidDataReceiverId { account_id: AccountId },\n    /// Chi\u1ec1u d\xe0i c\u1ee7a d\u1eef li\u1ec7u tr\u1ea3 v\u1ec1 \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n trong DataReceipt.\n    ReturnedValueLengthExceeded { length: u64, limit: u64 },\n    /// S\u1ed1 l\u01b0\u1ee3ng c\xe1c dependency c\u1ee7a d\u1eef li\u1ec7u \u0111\u1ea7u v\xe0o \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n trong ActionReceipt.\n    NumberInputDataDependenciesExceeded { number_of_input_data_dependencies: u64, limit: u64 },\n    /// L\u1ed7i \u0111\xe3 x\u1ea3y ra trong qu\xe1 tr\xecnh x\xe1c nh\u1eadn c\xe1c action c\u1ee7a m\u1ed9t ActionReceipt.\n    ActionsValidation(ActionsValidationError),\n    /// Receipt is bigger than the limit.\n    /// ReceiptSizeExceeded means that there was a receipt above the size limit (currently 4MiB).\n    /// NEAR will refuse to execute receipts that are above the size limit.\n    /// The most likely source of such receipts would be cross-contract calls with a lot of large actions\n    /// (contract deployment, function call with large args, etc).\n    /// This error means that the user has to adjust their contract to generate smaller receipts.\n    ReceiptSizeExceeded { size: u64, limit: u64 },\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-6",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'ReceiptValidationError::InvalidPredecessorId { account_id } \n"The predecessor_id `{}` of a Receipt is not valid."\n\nReceiptValidationError::InvalidReceiverId { account_id } \n"The receiver_id `{}` of a Receipt is not valid."\n\nReceiptValidationError::InvalidSignerId { account_id } \n"The signer_id `{}` of an ActionReceipt is not valid."\n\nReceiptValidationError::InvalidDataReceiverId { account_id } \n"The receiver_id `{}` of a DataReceiver within an ActionReceipt is not valid."\n\nReceiptValidationError::ReturnedValueLengthExceeded { length, limit } \n"The length of the returned data {} exceeded the limit {} in a DataReceipt"\n\nReceiptValidationError::NumberInputDataDependenciesExceeded { number_of_input_data_dependencies, limit } \n"The number of input data dependencies {} exceeded the limit {} in an ActionReceipt"\n\nReceiptValidationError::ActionsValidation(e) \n\nReceiptValidationError::ReceiptSizeExceeded { size, limit }\n"The size of the receipt exceeded the limit: {} > {}",\n'})}),"\n",(0,i.jsx)(e.h2,{id:"vmerror-and-subtypes",children:"VMError v\xe0 c\xe1c subtype"}),"\n",(0,i.jsx)(e.h3,{id:"vmerror",children:"VMError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-10",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"pub enum VMError {\n    FunctionCallError(FunctionCallError),\n    /// L\u1ed7i b\xean ngo\xe0i t\u1eeb vi\u1ec7c th\u1ef1c hi\u1ec7n External trait \u0111\u01b0\u1ee3c serialize.\n    ExternalError(Vec<u8>),\n    /// L\u1ed7i x\u1ea3y ra b\u1edfi ho\u1ea1t \u0111\u1ed9ng tr\xean m\u1ed9t state kh\xf4ng \u0111\u1ed3ng nh\u1ea5t.\n    /// V\xed d\u1ee5 l\u1ed7i tr\xe0n s\u1ed1 integer khi s\u1eed d\u1ee5ng m\u1ed9t gi\xe1 tr\u1ecb t\u1eeb m\u1ed9t context cho tr\u01b0\u1edbc.\n    InconsistentStateError(InconsistentStateError),\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-7",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'VMError::ExternalError\n  "Serialized ExternalError"\n'})}),"\n",(0,i.jsx)(e.h3,{id:"functioncallerror",children:"FunctionCallError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-11",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"pub enum FunctionCallError {\n    CompilationError(CompilationError),\n    LinkError { msg: String },\n    MethodResolveError(MethodResolveError),\n    WasmTrap { msg: String },\n    HostError(HostError),\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-8",children:"Error Messages"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'FunctionCallError::WasmTrap\n  "WebAssembly trap: {}"\n'})}),"\n",(0,i.jsx)(e.h3,{id:"methodresolveerror",children:"MethodResolveError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-12",children:"Definition"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"pub enum MethodResolveError {\n    MethodEmptyName,\n    MethodUTF8Error,\n    MethodNotFound,\n    MethodInvalidSignature,\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"compilationerror",children:"CompilationError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-13",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"pub enum CompilationError {\n    CodeDoesNotExist { account_id: String },\n    PrepareError(PrepareError),\n    WasmerCompileError { msg: String },\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-9",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'CompilationError::CodeDoesNotExist\n  "cannot find contract code for account {}"\n\nCompilationError::PrepareError(p)\n  "PrepareError: {}"\n\nCompilationError::WasmerCompileError\n  "Wasmer compilation error: {}"\n'})}),"\n",(0,i.jsx)(e.h3,{id:"prepareerror",children:"PrepareError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-14",children:"Definition"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"/// L\u1ed7i x\u1ea3y ra khi chu\u1ea9n b\u1ecb ho\u1eb7c th\u1ef1c thi Wasm smart-contract.\npub enum PrepareError {\n    /// L\u1ed7i \u0111\xe3 x\u1ea3y ra trong khi serialize module.\n    Serialization,\n    /// L\u1ed7i \u0111\xe3 x\u1ea3y ra trong khi deserialize module.\n    Deserialization,\n    /// Khai b\xe1o b\u1ed9 nh\u1edb b\xean trong \u0111\xe3 \u0111\u01b0\u1ee3c t\xecm th\u1ea5y trong module.\n    InternalMemoryDeclared,\n    /// Th\u1ea5t b\u1ea1i trong vi\u1ec7c \u0111o \u0111\u1ea1c gas.\n    ///\n    /// \u0110i\u1ec1u n\xe0y cho th\u1ea5y r\u1ea5t c\xf3 th\u1ec3 module kh\xf4ng h\u1ee3p l\u1ec7.\n    GasInstrumentation,\n    /// Th\u1ea5t b\u1ea1i trong vi\u1ec7c \u0111o \u0111\u1ea1c stack.\n    ///\n    /// \u0110i\u1ec1u n\xe0y cho th\u1ea5y r\u1ea5t c\xf3 th\u1ec3 module kh\xf4ng h\u1ee3p l\u1ec7.\n    StackHeightInstrumentation,\n    /// L\u1ed7i \u0111\xe3 x\u1ea3y ra trong qu\xe1 tr\xecnh kh\u1edfi t\u1ea1o.\n    ///\n    /// \u0110i\u1ec1u n\xe0y ch\u1ec9 ra r\u1eb1ng c\xf3 th\u1ec3 function `start` b\u1ecb k\u1eb9t, ho\u1eb7c module kh\xf4ng\n    /// th\u1ec3 kh\u1edfi t\u1ea1o v\xe0/ho\u1eb7c kh\xf4ng th\u1ec3 k\u1ebft n\u1ed1i \u0111\u01b0\u1ee3c.\n    Instantiate,\n    /// L\u1ed7i khi t\u1ea1o b\u1ed9 nh\u1edb.\n    Memory,\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-10",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'Serialization\n  "Error happened while serializing the module."\n\nDeserialization\n  "Error happened while deserializing the module."\n\nInternalMemoryDeclared\n  "Internal memory declaration has been found in the module."\n\nGasInstrumentation\n  "Gas instrumentation failed."\n\nStackHeightInstrumentation\n  "Stack instrumentation failed."\n\nInstantiate\n  "Error happened during instantiation."\n\nMemory\n  "Error creating memory"\n'})}),"\n",(0,i.jsx)(e.h3,{id:"hosterror",children:"HostError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-15",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"pub enum HostError {\n    /// String encoding kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t chu\u1ed7i UTF-16\n    BadUTF16,\n    /// String encoding kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t chu\u1ed7i UTF-8\n    BadUTF8,\n    /// \u0110\xe3 v\u01b0\u1ee3t qu\xe1 l\u01b0\u1ee3ng gas tr\u1ea3 tr\u01b0\u1edbc\n    GasExceeded,\n    /// \u0110\xe3 v\u01b0\u1ee3t qu\xe1 s\u1ed1 l\u01b0\u1ee3ng gas t\u1ed1i \u0111a \u0111\u01b0\u1ee3c cho ph\xe9p burn cho m\u1ed7i contract\n    GasLimitExceeded,\n    /// \u0110\xe3 v\u01b0\u1ee3t qu\xe1 s\u1ed1 d\u01b0 c\u1ee7a account\n    BalanceExceeded,\n    /// \u0110\xe3 c\u1ed1 g\u1eafng call t\xean method r\u1ed7ng\n    EmptyMethodName,\n    /// Smart contract \u0111\xe3 panic\n    GuestPanic { panic_msg: String },\n    /// IntegerOverflow \u0111\xe3 x\u1ea3y ra trong qu\xe1 tr\xecnh th\u1ef1c thi contract\n    IntegerOverflow,\n    /// `promise_idx` kh\xf4ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\xe1c promise hi\u1ec7n c\xf3\n    InvalidPromiseIndex { promise_idx: u64 },\n    /// C\xe1c action ch\u1ec9 c\xf3 th\u1ec3 n\u1ed1i th\xeam v\u1edbi c\xe1c non-joint promise.\n    CannotAppendActionToJointPromise,\n    /// Tr\u1ea3 v\u1ec1 joint promise \u0111ang b\u1ecb c\u1ea5m\n    CannotReturnJointPromise,\n    /// \u0110\xe3 truy c\u1eadp v\xe0o index k\u1ebft qu\u1ea3 kh\xf4ng h\u1ee3p l\u1ec7 c\u1ee7a promise\n    InvalidPromiseResultIndex { result_idx: u64 },\n    /// \u0110\xe3 truy c\u1eadp v\xe0o register id kh\xf4ng h\u1ee3p l\u1ec7\n    InvalidRegisterId { register_id: u64 },\n    /// Iterator `iterator_index` \u0111\xe3 b\u1ecb v\xf4 hi\u1ec7u sau khi n\xf3 \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1eb1ng c\xe1ch th\u1ef1c thi m\u1ed9t h\xe0nh \u0111\u1ed9ng mutable tr\xean trie\n    IteratorWasInvalidated { iterator_index: u64 },\n    /// \u0110\xe3 truy c\u1eadp ngo\xe0i v\xf9ng nh\u1edb\n    MemoryAccessViolation,\n    /// VM Logic \u0111\xe3 tr\u1ea3 v\u1ec1 m\u1ed9t receipt index kh\xf4ng h\u1ee3p l\u1ec7\n    InvalidReceiptIndex { receipt_index: u64 },\n    /// Iterator index `iterator_index` kh\xf4ng t\u1ed3n t\u1ea1i\n    InvalidIteratorIndex { iterator_index: u64 },\n    /// VM Logic \u0111\xe3 tr\u1ea3 v\u1ec1 account id kh\xf4ng h\u1ee3p l\u1ec7\n    InvalidAccountId,\n    /// VM Logic \u0111\xe3 tr\u1ea3 v\u1ec1 t\xean method kh\xf4ng h\u1ee3p l\u1ec7\n    InvalidMethodName,\n    /// VM Logic \u0111\xe3 cung c\u1ea5p public key kh\xf4ng h\u1ee3p l\u1ec7\n    InvalidPublicKey,\n    /// `method_name` kh\xf4ng \u0111\u01b0\u1ee3c cho ph\xe9p trong view call\n    ProhibitedInView { method_name: String },\n    /// T\u1ed5ng s\u1ed1 l\u01b0\u1ee3ng log s\u1ebd v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n.\n    NumberOfLogsExceeded { limit: u64 },\n    /// Chi\u1ec1u d\xe0i c\u1ee7a storage key \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n.\n    KeyLengthExceeded { length: u64, limit: u64 },\n    /// Chi\u1ec1u d\xe0i c\u1ee7a storage value \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n.\n    ValueLengthExceeded { length: u64, limit: u64 },\n    /// T\u1ed5ng s\u1ed1 chi\u1ec1u d\xe0i c\u1ee7a log \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n.\n    TotalLogLengthExceeded { length: u64, limit: u64 },\n    /// S\u1ed1 l\u01b0\u1ee3ng promise t\u1ed1i \u0111a trong m\u1ed9t FunctionCall \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n.\n    NumberPromisesExceeded { number_of_promises: u64, limit: u64 },\n    /// S\u1ed1 l\u01b0\u1ee3ng dependency t\u1ed1i \u0111a c\u1ee7a d\u1eef li\u1ec7u \u0111\u1ea7u v\xe0o \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n.\n    NumberInputDataDependenciesExceeded { number_of_input_data_dependencies: u64, limit: u64 },\n    /// Chi\u1ec1u d\xe0i c\u1ee7a gi\xe1 tr\u1ecb tr\u1ea3 v\u1ec1 \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n.\n    ReturnedValueLengthExceeded { length: u64, limit: u64 },\n    /// K\xedch th\u01b0\u1edbc contract cho action DeployContract \u0111\xe3 v\u01b0\u1ee3t qu\xe1 gi\u1edbi h\u1ea1n.\n    ContractSizeExceeded { size: u64, limit: u64 },\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-11",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'BadUTF8 \n  "String encoding is bad UTF-8 sequence."\n\nBadUTF16 \n  "String encoding is bad UTF-16 sequence."\n\nGasExceeded \n  "Exceeded the prepaid gas."\n\nGasLimitExceeded \n  "Exceeded the maximum amount of gas allowed to burn per contract."\n\nBalanceExceeded \n  "Exceeded the account balance."\n\nEmptyMethodName \n  "Tried to call an empty method name."\n\nGuestPanic { panic_msg } \n  "Smart contract panicked: {}"\n\nIntegerOverflow \n  "Integer overflow."\n\nInvalidIteratorIndex { iterator_index } \n  "Iterator index {:?} does not exist"\n\nInvalidPromiseIndex { promise_idx } \n  "{:?} does not correspond to existing promises"\n\nCannotAppendActionToJointPromise \n  "Actions can only be appended to non-joint promise."\n\nCannotReturnJointPromise \n  "Returning joint promise is currently prohibited."\n\nInvalidPromiseResultIndex { result_idx } \n  "Accessed invalid promise result index: {:?}"\n\nInvalidRegisterId { register_id } \n  "Accessed invalid register id: {:?}"\n\nIteratorWasInvalidated { iterator_index } \n  "Iterator {:?} was invalidated after its creation by performing a mutable operation on trie"\n\nMemoryAccessViolation \n  "Accessed memory outside the bounds."\n\nInvalidReceiptIndex { receipt_index } \n  "VM Logic returned an invalid receipt index: {:?}"\n\nInvalidAccountId \n  "VM Logic returned an invalid account id"\n\nInvalidMethodName \n  "VM Logic returned an invalid method name"\n\nInvalidPublicKey \n  "VM Logic provided an invalid public key"\n\nProhibitedInView { method_name } \n  "{} is not allowed in view calls"\n\nNumberOfLogsExceeded { limit } \n  "The number of logs will exceed the limit {}"\n\nKeyLengthExceeded { length, limit } \n  "The length of a storage key {} exceeds the limit {}"\n\nValueLengthExceeded { length, limit } \n  "The length of a storage value {} exceeds the limit {}"\n\nTotalLogLengthExceeded{ length, limit } \n  "The length of a log message {} exceeds the limit {}"\n\nNumberPromisesExceeded { number_of_promises, limit } \n  "The number of promises within a FunctionCall {} exceeds the limit {}"\n\nNumberInputDataDependenciesExceeded { number_of_input_data_dependencies, limit } \n  "The number of input data dependencies {} exceeds the limit {}"\n\nReturnedValueLengthExceeded { length, limit } \n  "The length of a returned value {} exceeds the limit {}"\n\nContractSizeExceeded { size, limit } \n  "The size of a contract code in DeployContract action {} exceeds the limit {}"\n\n'})}),"\n",(0,i.jsx)(e.h3,{id:"vmlogicerror",children:"VMLogicError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-16",children:"\u0110\u1ecbnh ngh\u0129a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"pub enum VMLogicError {\n    HostError(HostError),\n    /// L\u1ed7i b\xean ngo\xe0i t\u1eeb vi\u1ec7c th\u1ef1c hi\u1ec7n External trait \u0111\u01b0\u1ee3c serialize.\n    ExternalError(Vec<u8>),\n    /// L\u1ed7i x\u1ea3y ra b\u1edfi ho\u1ea1t \u0111\u1ed9ng tr\xean m\u1ed9t state kh\xf4ng \u0111\u1ed3ng nh\u1ea5t.\n    InconsistentStateError(InconsistentStateError),\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"inconsistentstateerror",children:"InconsistentStateError"}),"\n",(0,i.jsx)(e.h4,{id:"definition-17",children:"Definition"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"pub enum InconsistentStateError {\n    /// Ho\u1ea1t \u0111\u1ed9ng t\xednh to\xe1n v\u1edbi gi\xe1 tr\u1ecb t\u1eeb state \u0111\xe3 tr\u1ea3 v\u1ec1 m\u1ed9t l\u1ed7i tr\xe0n s\u1ed1 integer.\n    IntegerOverflow,\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"error-messages-12",children:"Th\xf4ng B\xe1o L\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'InconsistentStateError::IntegerOverflow\n    "Math operation with a value from the state resulted in a integer overflow."\n'})}),"\n",(0,i.jsx)(e.h2,{id:"rpc-interface",children:"RPC interface"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"t\xean l\u1ed7i"}),"\n",(0,i.jsx)(e.li,{children:"(c\xe1c) subtype c\u1ee7a l\u1ed7i"}),"\n",(0,i.jsx)(e.li,{children:"c\xe1c thu\u1ed9c t\xednh c\u1ee7a l\u1ed7i"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"error-schema",children:"Schema c\u1ee7a l\u1ed7i"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'{\n  "schema": {\n    "BadUTF16": {\n      "name": "BadUTF16",\n      "subtypes": [],\n      "props": {}\n    },\n    "BadUTF8": {\n      "name": "BadUTF8",\n      "subtypes": [],\n      "props": {}\n    },\n    "BalanceExceeded": {\n      "name": "BalanceExceeded",\n      "subtypes": [],\n      "props": {}\n    },\n    "CannotAppendActionToJointPromise": {\n      "name": "CannotAppendActionToJointPromise",\n      "subtypes": [],\n      "props": {}\n    },\n    "CannotReturnJointPromise": {\n      "name": "CannotReturnJointPromise",\n      "subtypes": [],\n      "props": {}\n    },\n    "CodeDoesNotExist": {\n      "name": "CodeDoesNotExist",\n      "subtypes": [],\n      "props": {\n        "account_id": ""\n      }\n    },\n    "CompilationError": {\n      "name": "CompilationError",\n      "subtypes": [\n        "CodeDoesNotExist",\n        "PrepareError",\n        "WasmerCompileError"\n      ],\n      "props": {}\n    },\n    "ContractSizeExceeded": {\n      "name": "ContractSizeExceeded",\n      "subtypes": [],\n      "props": {\n        "limit": "",\n        "size": ""\n      }\n    },\n    "Deserialization": {\n      "name": "Deserialization",\n      "subtypes": [],\n      "props": {}\n    },\n    "EmptyMethodName": {\n      "name": "EmptyMethodName",\n      "subtypes": [],\n      "props": {}\n    },\n    "FunctionCallError": {\n      "name": "FunctionCallError",\n      "subtypes": [\n        "CompilationError",\n        "LinkError",\n        "MethodResolveError",\n        "WasmTrap",\n        "HostError"\n      ],\n      "props": {}\n    },\n    "GasExceeded": {\n      "name": "GasExceeded",\n      "subtypes": [],\n      "props": {}\n    },\n    "GasInstrumentation": {\n      "name": "GasInstrumentation",\n      "subtypes": [],\n      "props": {}\n    },\n    "GasLimitExceeded": {\n      "name": "GasLimitExceeded",\n      "subtypes": [],\n      "props": {}\n    },\n    "GuestPanic": {\n      "name": "GuestPanic",\n      "subtypes": [],\n      "props": {\n        "panic_msg": ""\n      }\n    },\n    "HostError": {\n      "name": "HostError",\n      "subtypes": [\n        "BadUTF16",\n        "BadUTF8",\n        "GasExceeded",\n        "GasLimitExceeded",\n        "BalanceExceeded",\n        "EmptyMethodName",\n        "GuestPanic",\n        "IntegerOverflow",\n        "InvalidPromiseIndex",\n        "CannotAppendActionToJointPromise",\n        "CannotReturnJointPromise",\n        "InvalidPromiseResultIndex",\n        "InvalidRegisterId",\n        "IteratorWasInvalidated",\n        "MemoryAccessViolation",\n        "InvalidReceiptIndex",\n        "InvalidIteratorIndex",\n        "InvalidAccountId",\n        "InvalidMethodName",\n        "InvalidPublicKey",\n        "ProhibitedInView",\n        "NumberOfLogsExceeded",\n        "KeyLengthExceeded",\n        "ValueLengthExceeded",\n        "TotalLogLengthExceeded",\n        "NumberPromisesExceeded",\n        "NumberInputDataDependenciesExceeded",\n        "ReturnedValueLengthExceeded",\n        "ContractSizeExceeded"\n      ],\n      "props": {}\n    },\n    "Instantiate": {\n      "name": "Instantiate",\n      "subtypes": [],\n      "props": {}\n    },\n    "IntegerOverflow": {\n      "name": "IntegerOverflow",\n      "subtypes": [],\n      "props": {}\n    },\n    "InternalMemoryDeclared": {\n      "name": "InternalMemoryDeclared",\n      "subtypes": [],\n      "props": {}\n    },\n    "InvalidAccountId": {\n      "name": "InvalidAccountId",\n      "subtypes": [],\n      "props": {}\n    },\n    "InvalidIteratorIndex": {\n      "name": "InvalidIteratorIndex",\n      "subtypes": [],\n      "props": {\n        "iterator_index": ""\n      }\n    },\n    "InvalidMethodName": {\n      "name": "InvalidMethodName",\n      "subtypes": [],\n      "props": {}\n    },\n    "InvalidPromiseIndex": {\n      "name": "InvalidPromiseIndex",\n      "subtypes": [],\n      "props": {\n        "promise_idx": ""\n      }\n    },\n    "InvalidPromiseResultIndex": {\n      "name": "InvalidPromiseResultIndex",\n      "subtypes": [],\n      "props": {\n        "result_idx": ""\n      }\n    },\n    "InvalidPublicKey": {\n      "name": "InvalidPublicKey",\n      "subtypes": [],\n      "props": {}\n    },\n    "InvalidReceiptIndex": {\n      "name": "InvalidReceiptIndex",\n      "subtypes": [],\n      "props": {\n        "receipt_index": ""\n      }\n    },\n    "InvalidRegisterId": {\n      "name": "InvalidRegisterId",\n      "subtypes": [],\n      "props": {\n        "register_id": ""\n      }\n    },\n    "IteratorWasInvalidated": {\n      "name": "IteratorWasInvalidated",\n      "subtypes": [],\n      "props": {\n        "iterator_index": ""\n      }\n    },\n    "KeyLengthExceeded": {\n      "name": "KeyLengthExceeded",\n      "subtypes": [],\n      "props": {\n        "length": "",\n        "limit": ""\n      }\n    },\n    "LinkError": {\n      "name": "LinkError",\n      "subtypes": [],\n      "props": {\n        "msg": ""\n      }\n    },\n    "Memory": {\n      "name": "Memory",\n      "subtypes": [],\n      "props": {}\n    },\n    "MemoryAccessViolation": {\n      "name": "MemoryAccessViolation",\n      "subtypes": [],\n      "props": {}\n    },\n    "MethodEmptyName": {\n      "name": "MethodEmptyName",\n      "subtypes": [],\n      "props": {}\n    },\n    "MethodInvalidSignature": {\n      "name": "MethodInvalidSignature",\n      "subtypes": [],\n      "props": {}\n    },\n    "MethodNotFound": {\n      "name": "MethodNotFound",\n      "subtypes": [],\n      "props": {}\n    },\n    "MethodResolveError": {\n      "name": "MethodResolveError",\n      "subtypes": [\n        "MethodEmptyName",\n        "MethodUTF8Error",\n        "MethodNotFound",\n        "MethodInvalidSignature"\n      ],\n      "props": {}\n    },\n    "MethodUTF8Error": {\n      "name": "MethodUTF8Error",\n      "subtypes": [],\n      "props": {}\n    },\n    "NumberInputDataDependenciesExceeded": {\n      "name": "NumberInputDataDependenciesExceeded",\n      "subtypes": [],\n      "props": {\n        "limit": "",\n        "number_of_input_data_dependencies": ""\n      }\n    },\n    "NumberOfLogsExceeded": {\n      "name": "NumberOfLogsExceeded",\n      "subtypes": [],\n      "props": {\n        "limit": ""\n      }\n    },\n    "NumberPromisesExceeded": {\n      "name": "NumberPromisesExceeded",\n      "subtypes": [],\n      "props": {\n        "limit": "",\n        "number_of_promises": ""\n      }\n    },\n    "PrepareError": {\n      "name": "PrepareError",\n      "subtypes": [\n        "Serialization",\n        "Deserialization",\n        "InternalMemoryDeclared",\n        "GasInstrumentation",\n        "StackHeightInstrumentation",\n        "Instantiate",\n        "Memory"\n      ],\n      "props": {}\n    },\n    "ProhibitedInView": {\n      "name": "ProhibitedInView",\n      "subtypes": [],\n      "props": {\n        "method_name": ""\n      }\n    },\n    "ReturnedValueLengthExceeded": {\n      "name": "ReturnedValueLengthExceeded",\n      "subtypes": [],\n      "props": {\n        "length": "",\n        "limit": ""\n      }\n    },\n    "Serialization": {\n      "name": "Serialization",\n      "subtypes": [],\n      "props": {}\n    },\n    "StackHeightInstrumentation": {\n      "name": "StackHeightInstrumentation",\n      "subtypes": [],\n      "props": {}\n    },\n    "TotalLogLengthExceeded": {\n      "name": "TotalLogLengthExceeded",\n      "subtypes": [],\n      "props": {\n        "length": "",\n        "limit": ""\n      }\n    },\n    "ValueLengthExceeded": {\n      "name": "ValueLengthExceeded",\n      "subtypes": [],\n      "props": {\n        "length": "",\n        "limit": ""\n      }\n    },\n    "WasmTrap": {\n      "name": "WasmTrap",\n      "subtypes": [],\n      "props": {\n        "msg": ""\n      }\n    },\n    "WasmerCompileError": {\n      "name": "WasmerCompileError",\n      "subtypes": [],\n      "props": {\n        "msg": ""\n      }\n    },\n    "AccessKeyNotFound": {\n      "name": "AccessKeyNotFound",\n      "subtypes": [],\n      "props": {\n        "account_id": "",\n        "public_key": ""\n      }\n    },\n    "AccountAlreadyExists": {\n      "name": "AccountAlreadyExists",\n      "subtypes": [],\n      "props": {\n        "account_id": ""\n      }\n    },\n    "AccountDoesNotExist": {\n      "name": "AccountDoesNotExist",\n      "subtypes": [],\n      "props": {\n        "account_id": ""\n      }\n    },\n    "ActionError": {\n      "name": "ActionError",\n      "subtypes": [\n        "AccountAlreadyExists",\n        "AccountDoesNotExist",\n        "CreateAccountNotAllowed",\n        "ActorNoPermission",\n        "DeleteKeyDoesNotExist",\n        "AddKeyAlreadyExists",\n        "DeleteAccountStaking",\n        "DeleteAccountHasRent",\n        "RentUnpaid",\n        "TriesToUnstake",\n        "TriesToStake",\n        "FunctionCallError",\n        "NewReceiptValidationError"\n      ],\n      "props": {\n        "index": ""\n      }\n    },\n    "ActorNoPermission": {\n      "name": "ActorNoPermission",\n      "subtypes": [],\n      "props": {\n        "account_id": "",\n        "actor_id": ""\n      }\n    },\n    "AddKeyAlreadyExists": {\n      "name": "AddKeyAlreadyExists",\n      "subtypes": [],\n      "props": {\n        "account_id": "",\n        "public_key": ""\n      }\n    },\n    "BalanceMismatchError": {\n      "name": "BalanceMismatchError",\n      "subtypes": [],\n      "props": {\n        "final_accounts_balance": "",\n        "final_postponed_receipts_balance": "",\n        "incoming_receipts_balance": "",\n        "incoming_validator_rewards": "",\n        "initial_accounts_balance": "",\n        "initial_postponed_receipts_balance": "",\n        "new_delayed_receipts_balance": "",\n        "outgoing_receipts_balance": "",\n        "processed_delayed_receipts_balance": "",\n        "total_balance_burnt": "",\n        "total_balance_slashed": "",\n        "total_rent_paid": "",\n        "total_validator_reward": ""\n      }\n    },\n    "CostOverflow": {\n      "name": "CostOverflow",\n      "subtypes": [],\n      "props": {}\n    },\n    "CreateAccountNotAllowed": {\n      "name": "CreateAccountNotAllowed",\n      "subtypes": [],\n      "props": {\n        "account_id": "",\n        "predecessor_id": ""\n      }\n    },\n    "DeleteAccountHasRent": {\n      "name": "DeleteAccountHasRent",\n      "subtypes": [],\n      "props": {\n        "account_id": "",\n        "balance": ""\n      }\n    },\n    "DeleteAccountStaking": {\n      "name": "DeleteAccountStaking",\n      "subtypes": [],\n      "props": {\n        "account_id": ""\n      }\n    },\n    "DeleteKeyDoesNotExist": {\n      "name": "DeleteKeyDoesNotExist",\n      "subtypes": [],\n      "props": {\n        "account_id": "",\n        "public_key": ""\n      }\n    },\n    "DepositWithFunctionCall": {\n      "name": "DepositWithFunctionCall",\n      "subtypes": [],\n      "props": {}\n    },\n    "Expired": {\n      "name": "Expired",\n      "subtypes": [],\n      "props": {}\n    },\n    "InvalidAccessKeyError": {\n      "name": "InvalidAccessKeyError",\n      "subtypes": [\n        "AccessKeyNotFound",\n        "ReceiverMismatch",\n        "MethodNameMismatch",\n        "RequiresFullAccess",\n        "NotEnoughAllowance",\n        "DepositWithFunctionCall"\n      ],\n      "props": {}\n    },\n    "InvalidChain": {\n      "name": "InvalidChain",\n      "subtypes": [],\n      "props": {}\n    },\n    "InvalidNonce": {\n      "name": "InvalidNonce",\n      "subtypes": [],\n      "props": {\n        "ak_nonce": "",\n        "tx_nonce": ""\n      }\n    },\n    "InvalidReceiverId": {\n      "name": "InvalidReceiverId",\n      "subtypes": [],\n      "props": {\n        "receiver_id": ""\n      }\n    },\n    "InvalidSignature": {\n      "name": "InvalidSignature",\n      "subtypes": [],\n      "props": {}\n    },\n    "InvalidSignerId": {\n      "name": "InvalidSignerId",\n      "subtypes": [],\n      "props": {\n        "signer_id": ""\n      }\n    },\n    "InvalidTxError": {\n      "name": "InvalidTxError",\n      "subtypes": [\n        "InvalidAccessKeyError",\n        "InvalidSignerId",\n        "SignerDoesNotExist",\n        "InvalidNonce",\n        "InvalidReceiverId",\n        "InvalidSignature",\n        "NotEnoughBalance",\n        "RentUnpaid",\n        "CostOverflow",\n        "InvalidChain",\n        "Expired",\n        "ActionsValidation"\n      ],\n      "props": {}\n    },\n    "MethodNameMismatch": {\n      "name": "MethodNameMismatch",\n      "subtypes": [],\n      "props": {\n        "method_name": ""\n      }\n    },\n    "NotEnoughAllowance": {\n      "name": "NotEnoughAllowance",\n      "subtypes": [],\n      "props": {\n        "account_id": "",\n        "allowance": "",\n        "cost": "",\n        "public_key": ""\n      }\n    },\n    "NotEnoughBalance": {\n      "name": "NotEnoughBalance",\n      "subtypes": [],\n      "props": {\n        "balance": "",\n        "cost": "",\n        "signer_id": ""\n      }\n    },\n    "ReceiverMismatch": {\n      "name": "ReceiverMismatch",\n      "subtypes": [],\n      "props": {\n        "ak_receiver": "",\n        "tx_receiver": ""\n      }\n    },\n    "RentUnpaid": {\n      "name": "RentUnpaid",\n      "subtypes": [],\n      "props": {\n        "account_id": "",\n        "amount": ""\n      }\n    },\n    "RequiresFullAccess": {\n      "name": "RequiresFullAccess",\n      "subtypes": [],\n      "props": {}\n    },\n    "SignerDoesNotExist": {\n      "name": "SignerDoesNotExist",\n      "subtypes": [],\n      "props": {\n        "signer_id": ""\n      }\n    },\n    "TriesToStake": {\n      "name": "TriesToStake",\n      "subtypes": [],\n      "props": {\n        "account_id": "",\n        "balance": "",\n        "locked": "",\n        "stake": ""\n      }\n    },\n    "TriesToUnstake": {\n      "name": "TriesToUnstake",\n      "subtypes": [],\n      "props": {\n        "account_id": ""\n      }\n    },\n    "TxExecutionError": {\n      "name": "TxExecutionError",\n      "subtypes": [\n        "ActionError",\n        "InvalidTxError"\n      ],\n      "props": {}\n    },\n    "Closed": {\n      "name": "Closed",\n      "subtypes": [],\n      "props": {}\n    },\n    "ServerError": {\n      "name": "ServerError",\n      "subtypes": [\n        "TxExecutionError",\n        "Timeout",\n        "Closed"\n      ],\n      "props": {}\n    },\n    "Timeout": {\n      "name": "Timeout",\n      "subtypes": [],\n      "props": {}\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(e.admonition,{title:"Got a question?",type:"tip",children:(0,i.jsx)("a",{href:"https://stackoverflow.com/questions/tagged/nearprotocol",target:"_blank",rel:"noopener noreferrer",children:" Ask it on StackOverflow! "})})]})}function u(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>c,a:()=>a});var i=t(67294);const r={},o=i.createContext(r);function a(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);